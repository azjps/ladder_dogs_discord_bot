[project]
name = "ladder_dogs_discord_bot"

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
version = "2024.1.0"
description = "Discord bot for puzzle hunt management"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}

# authors = []

# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 4 - Beta",

  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

# TODO: move from pipenv to pyproject.toml?
# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
#
# For an analysis of this field vs pip's requirements files see:
# https://packaging.python.org/discussions/install-requires-vs-requirements/
# dependencies = [ # Optional
#   "peppercorn"
# ]

# List additional groups of dependencies here (e.g. development
# dependencies). Users will be able to install these using the "extras"
# syntax, for example:
#
#   $ pip install sampleproject[dev]
#
# Similar to `dependencies` above, these must be valid existing
# projects.
# [project.optional-dependencies] # Optional
# dev = ["check-manifest"]
# test = ["coverage"]

[project.urls]
"Homepage" = "https://github.com/azjps/ladder_dogs_discord_bot"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "B"]
ignore = [
    "E501",  # let ruff format handle it
]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]